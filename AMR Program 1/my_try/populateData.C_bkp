#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "simple_amr.h"
void setNeighbor(box *box1,int sideref,int numNeighbor, int **neigh);

int main()
{
    FILE* fp;
gridBox grid[20];
    char file[20]="testgrid_1";
//	grid = (gridBox *)malloc(sizeof(gridBox)*20);
    int i=0,j=0,id, x, y, h, w, numNeighbor, tmp;
  //  int numBox=0, numRow=0,numCol=0;
    float dsv;
    fp=fopen(file,"r");
	printf("fp=%d",fp);
    fscanf(fp,"%d %d %d\n", &numBox, &numRow,&numCol);
	printf("value===%d %d %d",numBox, numRow,numCol);
    while(fscanf(fp,"%c",&id)!=EOF)
    {
	box box1[20];
	fscanf(fp,"%d %d %d %d\n", &x, &y, &h, &w);
	printf("In place 1\n");
	box1[j].upp_x = h;
	box1[j].upp_y = w;
	box1[j].low_x = x;
	box1[j].low_y = y;
	for( i=0;i<4;i++)
	{
	    fscanf(fp,"%d\n",&numNeighbor);
	    int *neigh;
	    neigh = (int *)malloc(sizeof(int)*numNeighbor);
	    for( int j=0;j<numNeighbor;j++)
	    {
		fscanf(fp,"%d\n",&tmp);
		neigh[j] = tmp;
	    }
	    setNeighbor(&box1[i], i, numNeighbor, &neigh);
	}
	fscanf(fp,"%d\n",&dsv);
	box1[i].dsv = dsv;
	printf("value=%d",box1[i].dsv);
	/*grid[i].id=id;
	grid[i].Box.upp_x =box1.upp_x;
	grid[i].Box.upp_y =box1.upp_y;
	grid[i].Box.low_x =box1.low_x;
	grid[i].Box.low_x =box1.low_x;
	j++;
	//fscanf(fp,"%c\n",&id);
*/
	}
	for(i=0;i<4;i++)
	{
	printf("%d\n",grid[i].Box.low_x);
	printf("%d\n",grid[i].Box.dsv);
}	
return 0;
}
void setNeighbor(box *box1,int sideref,int numNeighbor, int **neigh)
{
switch(sideref)
{
    case 0:(*box1).nTop = numNeighbor;
            (*box1).topNbor = (*neigh);
            break;
        case 1:(*box1).nBot = numNeighbor;
            (*box1).botNbor = (*neigh);
            break;
        case 2:(*box1).nLeft = numNeighbor;
            (*box1).leftNbor = (*neigh);
            break;
        case 3:(*box1).nRight = numNeighbor;
               (*box1).rightNbor = (*neigh);
               break;
        default:
            break;
}
}
